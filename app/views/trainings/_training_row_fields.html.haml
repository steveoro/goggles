%li.full_row.nested-fields
  .group_hdr.row-fluid.control-row{ hidden: 'true' }
    .span1.g-w20
      = f.input :group_id, label: false, wrapper: false, input_html: {class: 'group_id group_clear'}
    .span2.g-w150
    .span1.g-w25
      = f.input :group_times, label: false, wrapper: false, input_html: {class: 'jspinner group_times group_clear'}
    .span1.g-w50
    .span4.g-w320
    .span1.g-w80
      = f.input :group_start_and_rest, label: false, wrapper: false do
        = f.select :group_start_and_rest, (0.step(3600,5).collect{ |x| [(x > 0 ? sprintf("%2s\'%02.0f\"",x/60, x%60) : '-'), x] }), {}, {class: 'group_clear'}
    .span1.g-w80
      = f.input :group_pause, label: false, wrapper: false do
        = f.select :group_pause, (0.step(1800,5).collect{ |x| [(x > 0 ? sprintf("%2s\'%02.0f\"",x/60, x%60) : '-'), x] }), {}, {class: 'group_clear'}
    .span1.g-w50
      .toolTip{'data-toggle' => 'tooltip', 'title' => I18n.t('trainings.link_break_tooltip') }
        = link_to_function( image_tag('link_break.png'), "clickBreakGrouping( $(this).closest('.full_row') );" )

  %ul.group_detail.droppable.sortable
    %li.data_row.row-fluid.control-row
      .span1.g-w20
        = f.input :part_order, label: false, wrapper: false, input_html: {class: 'autosequence'}
      .span2.g-w150
        = f.association :training_step_type, label: false, wrapper: false, collection: TrainingStepType.to_dropdown(nil,:id,:i18n_description), prompt: I18n.t('please_select'), input_html: {class: 'training_step_type'}
      .span1.g-w25
        = f.input :times, label: false, wrapper: false, input_html: {class: 'jspinner'}
      .span1.g-w50
        = f.input :distance, label: false, wrapper: false
      .span4.g-w320
        = f.input :exercise_id, label: false, wrapper: false, input_html: {class: 'exercise_id', :type=>:hidden}
        = text_field_tag( :exercise_desc, nil, class: 'exercise-autocomplete', placeholder: I18n.t('trainings.type_something') )
      .span1.g-w80
        = f.input :start_and_rest, label: false, wrapper: false do
          = f.select :start_and_rest, (0.step(3600,5).collect{ |x| [(x > 0 ? sprintf("%2s\'%02.0f\"",x/60, x%60) : '-'), x] })
      .span1.g-w80
        = f.input :pause, label: false, wrapper: false do
          = f.select :pause, (0.step(1800,5).collect{ |x| [(x > 0 ? sprintf("%2s\'%02.0f\"",x/60, x%60) : '-'), x] })
      .span1.g-w50
        .ungrouped-row-controls
          .toolTip{'data-toggle' => 'tooltip', 'title' => I18n.t('trainings.delete_row_tooltip') }
            = link_to_remove_association( image_tag('delete.png'), f, :confirm => I18n.t('netzke.basepack.grid_panel.are_you_sure') )

      .row-fluid.control-row
        .offset5.span1.g-w80
          = f.association :arm_aux_type, label: false, wrapper: false, collection: ArmAuxType.to_dropdown(nil,:id,:i18n_description), prompt: I18n.t('please_select'), input_html: {class: 'arm_aux_type'}
        .span1.g-w80
          = f.association :kick_aux_type, label: false, wrapper: false, collection: KickAuxType.to_dropdown(nil,:id,:i18n_description), prompt: I18n.t('please_select'), input_html: {class: 'kick_aux_type'}
        .span1.g-w80
          = f.association :body_aux_type, label: false, wrapper: false, collection: BodyAuxType.to_dropdown(nil,:id,:i18n_description), prompt: I18n.t('please_select'), input_html: {class: 'body_aux_type'}
        .span1.g-w80
          = f.association :breath_aux_type, label: false, wrapper: false, collection: BreathAuxType.to_dropdown(nil,:id,:i18n_description), prompt: I18n.t('please_select'), input_html: {class: 'breath_aux_type'}
