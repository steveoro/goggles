.row-fluid.span12

= simple_nested_form_for @training do |f|
  = f.input :title, input_html: { class: 'span5' }
  = f.input :description, input_html: { rows: 3, class: 'span8' }
  = f.association :swimmer_level_type, collection: SwimmerLevelType.to_dropdown, prompt: I18n.t('trainings.chose_swimmer_level_type')

  .row-fluid.goggles-div-centeralign
    .span1.goggles-w15
      %i= I18n.t('activerecord.attributes.training_rows.part_order')
    .span3
      %i= I18n.t('activerecord.models.training_step_type')
    .span1.goggles-w30
      %i= I18n.t('activerecord.attributes.training_rows.times')
    .span1.goggles-w50
      %i= I18n.t('activerecord.attributes.training_rows.distance')
    .span3
      %i= I18n.t('activerecord.attributes.training_rows.exercise')
    .span1.goggles-w50
      %i= I18n.t('activerecord.attributes.training_rows.start_and_rest')
    .span1.goggles-w50
      %i= I18n.t('activerecord.attributes.training_rows.pause')
    .span1.goggles-w50

  .row-fluid#training_rows
    %ul#sortable.goggles-sortable
      = f.fields_for :training_rows, :wrapper => false do |training_row_form|
        %li
          .controls.controls-row.row-fluid
            .span1.goggles-w15
              = training_row_form.input :part_order, label: false, wrapper: false, input_html: {class: 'autosequence spinner'}
            .span3
              = training_row_form.association :training_step_type, label: false, wrapper: false, collection: TrainingStepType.to_dropdown(nil,:id,:i18n_description), prompt: I18n.t('please_select'), input_html: {class: 'autocomplete'}
            .span1.goggles-w30
              = training_row_form.input :times, label: false, wrapper: false, input_html: {class: 'spinner'}
            .span1.goggles-w50
              = training_row_form.input :distance, label: false, wrapper: false
            .span3
              = training_row_form.association :exercise, label: false, wrapper: false, collection: Exercise.to_dropdown, prompt: I18n.t('trainings.chose_exercise')
            .span1.goggles-w50
              = training_row_form.input :start_and_rest, label: false, wrapper: false do
                = training_row_form.select :start_and_rest, (0.step(3600,5).collect{ |x| [(x > 0 ? sprintf("%2s\'%02.0f\"",x/60, x%60) : '-'), x] })
            .span1.goggles-w50
              = training_row_form.input :pause, label: false, wrapper: false do
                = training_row_form.select :pause, (0.step(1800,5).collect{ |x| [(x > 0 ? sprintf("%2s\'%02.0f\"",x/60, x%60) : '-'), x] })
            .span1.goggles-w50
              = training_row_form.link_to_remove I18n.t(:delete)

  %p= f.link_to_add I18n.t(:add_new_row), :training_rows, :data => { :target => "#training_rows" }
  %p= f.button :submit

  #maxPartOrder{'data-value' => @training_max_part_order}

%script
  var maxSeq = Number( $('#maxPartOrder').attr('data-value') );

  $(document).ready( function(obj) {          |
    var spnField=$('.spinner');               |
    if ( spnField ) {                         |
      spnField.spinner();                     |
    }                                         |
    $( "#sortable" ).sortable({               |
      placeholder: "ui-state-highlight"       |
    });                                       |
  });                                         |

  $(document).on( 'nested:fieldAdded',        |
    function(event){                          |
      var f=event.field;                      |
      var seqField=f.find('.autosequence');   |
      maxSeq+=1;                              |
      seqField.val(maxSeq);                   |
      var spnField=$('.spinner');             |
      if ( spnField ) {                       |
        spnField.spinner();                   |
      }                                       |
    }                                         |
  );                                          |
