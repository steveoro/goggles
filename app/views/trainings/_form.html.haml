.row-fluid.span12

= simple_form_for @training do |f|
  = f.input :title, input_html: { class: 'span5' }
  = f.input :description, input_html: { rows: 3, class: 'span8' }
  = f.association :swimmer_level_type, collection: SwimmerLevelType.to_dropdown, prompt: I18n.t('trainings.chose_swimmer_level_type')

  .row-fluid.goggles-div-centeralign.goggles-smallfont
    .span1.goggles-w15
      %i= I18n.t('activerecord.attributes.training_rows.part_order')
    .span2
      %i= I18n.t('activerecord.models.training_step_type')
    .span1.goggles-w30
      %i= I18n.t('activerecord.attributes.training_rows.times')
    .span1.goggles-w50
      %i= I18n.t('activerecord.attributes.training_rows.distance')
    .span2
      %i= I18n.t('activerecord.attributes.training_rows.exercise')
    .span1.goggles-w50
      %i= I18n.t('activerecord.attributes.training_rows.start_and_rest')
    .span1.goggles-w50
      %i= I18n.t('activerecord.attributes.training_rows.pause')
    .span1.goggles-w50

  .row-fluid#training_rows
    %ul#sortable.goggles-sortable
      = f.simple_fields_for :training_rows do |training_row_form|
        = render 'training_row_fields', :f => training_row_form

  %p
  %p
    %i= "#{I18n.t(:drag_and_drop_to_sort_rows)} / "
    = link_to_add_association( I18n.t(:add_new_row), f, :training_rows, :data => {'association-insertion-node'=>'#sortable', 'association-insertion-method'=>'append'} )
  %p= f.button :submit

  #maxPartOrder{'data-value' => @training_max_part_order || 0 }

%script
  var maxSeq = Number( $('#maxPartOrder').attr('data-value') );

  function updateAutoSeq( event, ui ){                                          |
    var fieldList = $('#sortable').first().find('input.autosequence');          |
    fieldList.each( function(index, element) {                                  |
      element.value = index + 1;                                                |
    });                                                                         |
  };                                                                            |

  $(document).ready( function(obj) {                                            |
    $('.spinner').spinner();                                                    |
    $( "#sortable" ).sortable({                                                 |
      placeholder: "ui-state-highlight",                                        |
      beforeStop: updateAutoSeq                                                 |
    });                                                                         |

    $('#training_rows').on( "cocoon:before-remove", function(e, training_row) { |
        $(this).data('remove-timeout', 1000);                                   |
        training_row.fadeOut('slow');                                           |
      }                                                                         |
    ).on( "cocoon:after-insert", function(e, training_row_to_be_added) {        |
        $('.spinner').spinner();                                                |
        updateAutoSeq();                                                        |
      }                                                                         |
    ).on( "cocoon:after-remove", function() {                                   |
        updateAutoSeq();                                                        |
    });                                                                         |

  } );                                                                          |
