.row-fluid.span12

= simple_form_for @training do |f|
  = f.input :title, input_html: { class: 'span5' }
  = f.input :description, input_html: { rows: 3, class: 'span8' }
  = f.input :min_swimmer_level, as: :select, collection: [[I18n.t('trainings.chose_min_swimmer_level'), 0]] + ( SwimmerLevelType.to_dropdown(nil, :level) ) 
  = f.input :max_swimmer_level, as: :select, collection: [[I18n.t('trainings.chose_max_swimmer_level'), 0]] + ( SwimmerLevelType.to_dropdown(nil, :level) )

  %table
    %tr
      %td{width: 35, class: 'goggles-centeralign'}
      %td{width: 80, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.attributes.training_rows.part_order')
      %td{width: 250, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.models.training_step_type')
      %td{width: 80, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.attributes.training_rows.times')
      %td{width: 80, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.attributes.training_rows.distance')
      %td{width: 250, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.attributes.training_rows.exercise')
      %td{width: 110, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.attributes.training_rows.start_and_rest')
      %td{width: 110, class: 'goggles-centeralign'}
        %i= I18n.t('activerecord.attributes.training_rows.pause')

  .row-fluid#training_rows
    %ul#sortable.goggles-sortable
      = f.simple_fields_for :training_rows do |training_row_form|
        = render 'training_row_fields', :f => training_row_form

  %p
  %p
    %i= "#{I18n.t(:drag_and_drop_to_sort_rows)} / "
    = link_to_add_association( I18n.t(:add_new_row), f, :training_rows, :data => {'association-insertion-node'=>'#sortable', 'association-insertion-method'=>'append'} )
  %p= f.button :submit, I18n.t(:save)

  #maxPartOrder{'data-value' => @training_max_part_order || 0 }

%script
  var exerciseAutocompleteURL = "#{ json_list_exercises_path() }"

= javascript_include_tag 'training_row_form'
