<div class="navbar">
	<div class="navbar-inner">
		<a class='brand' href='#'>
			<%= AGEX_APP_NAME %> 
            <small class="text-error"><strong><%= t('admin_import.title') %></strong></small>
    	</a>
		<%= render_navigation( :context => 'admin_import', :expand_all => true, :renderer => :bootstrap ) %>
	</div>
</div>


<!--
  %body.rails_admin
    #loading.label.label-warning{:style => 'display:none; position:fixed; right:20px; bottom:20px; z-index:100000'}= t('admin.loading')
    .navbar.navbar-fixed-top
      .navbar-inner
        .container-fluid
          %a.brand.pjax{:href => dashboard_path}
            = _get_plugin_name[0] || 'Rails'
            %small= _get_plugin_name[1] || 'Admin'
          .nav-collapse
            = render :partial => 'layouts/rails_admin/secondary_navigation'
    .container-fluid
      .row-fluid
        .span3
          .well.sidebar-nav
            %ul.nav.nav-list= main_navigation
            %ul.nav.nav-list= static_navigation
        .span9
          .row-fluid
            .content{:'data-pjax-container' => true}= render :template => 'layouts/rails_admin/pjax'



%ul.nav.pull-right
  - actions(:root).each do |action|
    %li= link_to wording_for(:menu, action), { :action => action.action_name, :controller => 'rails_admin/main' }, :class => 'pjax'
  - if main_app_root_path = (main_app.root_path rescue false)
    %li= link_to t('admin.home.name').capitalize, main_app_root_path
  - if _current_user
    - if user_link = edit_user_link
      %li= user_link
    - if logout_path.present?
      %li= link_to content_tag('span', t('admin.misc.log_out'), :class => 'label label-important'), logout_path, :method => Devise.sign_out_via
    - if _current_user.respond_to?(:email) && _current_user.email.present?
      %li= image_tag "#{(request.ssl? ? 'https://secure' : 'http://www')}.gravatar.com/avatar/#{Digest::MD5.hexdigest _current_user.email}?s=30", :style => 'padding-top:5px'



:javascript
  $('.nav.nav-list li.active').removeClass('active');
  $('.nav.nav-list li[data-model="#{@abstract_model.to_param}"]').addClass('active');

%title= "#{@abstract_model.try(:pretty_name) || @page_name} | #{[_get_plugin_name[0] || 'Rails', _get_plugin_name[1] || 'Admin'].join(' ')}"
.page-header
  %h1= @page_name
- flash && flash.each do |key, value|
  .alert{:class => "alert-#{key}"}
    %a.close{:href => '#', :'data-dismiss' => "alert"}Ã—
    = value
= breadcrumb
%ul.nav.nav-tabs
  = menu_for((@abstract_model ? (@object.try(:persisted?) ? :member : :collection) : :root), @abstract_model, @object)
  = content_for :contextual_tabs
= yield

-->
