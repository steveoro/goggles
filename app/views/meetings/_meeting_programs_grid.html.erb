<%= grid(@meeting_programs_grid, show_filters: :when_filtered) do |g|
	g.blank_slate do
		content_tag( :div, t(:no_data_found), class: 'well' )
	end

	g.column(
		name: I18n.t(:session_order, {:scope=>[:activerecord, :attributes, :meeting_session]}),
		model: MeetingSession,
		attribute: 'session_order'
	) do |meeting_program|
		meeting_program.meeting_session.session_order if meeting_program
	end

	g.column(
		name: I18n.t(:any_date),
		model: MeetingSession,
		attribute: 'scheduled_date'
	) do |meeting_program|
		meeting_program.meeting_session.scheduled_date if meeting_program
	end

	g.column(
		name: I18n.t(:event_order, {:scope=>[:activerecord, :attributes, :meeting_program]}),
		attribute: 'event_order'
	) do |meeting_program|
		meeting_program.event_order if meeting_program
	end

	g.column(
		name: I18n.t(:event_type, {:scope=>[:activerecord, :models]}),
		attribute: 'event_type_id',
		custom_filter: EventType.to_dropdown
	) do |meeting_program|
		meeting_program.event_type.i18n_short if meeting_program
	end

	g.column(
		name: I18n.t(:category_type, {:scope=>[:activerecord, :models]}),
		attribute: 'category_type_id',
		custom_filter: CategoryType.to_dropdown( :season_type_id => @season_type_id )
	) do |meeting_program|
		meeting_program.category_type.code if meeting_program
	end

	g.column(
		name: I18n.t(:gender_type, {:scope=>[:activerecord, :models]}),
		attribute: 'gender_type_id',
		custom_filter: GenderType.to_dropdown
	) do |meeting_program|
		meeting_program.gender_type.i18n_short if meeting_program
	end

	g.column   do |meeting_program|
		link_to(I18n.t(:results), result_path(meeting_program))
	end

end -%>
