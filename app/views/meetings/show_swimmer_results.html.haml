- team = @individual_result_list.first.team
- team_id = team.id
- team_name = team.get_full_name
- has_goggle_cup = team.has_goggle_cup_at?( @meeting.header_date )
- event_list = []
= render( partial: 'meeting_header' )
= render( partial: 'tabs_and_title' )
- cache( cache_key_for_meeting( 'show_swimmer_results', @meeting.id, @max_mir_updated_at, team_id, @swimmer.id) ) do
  .goggles-category-gap.col-xs-12
    .col-xs-3.alert.alert-success
      %h4
        %a{'id'=>"swimmer#{@swimmer.id}", 'href'=>"#{ swimmer_radio_path(:id=>@swimmer.id) }", 'data-toggle' => 'tooltip', 'title' => I18n.t('radiography.radio_tab_tooltip')}
          = @swimmer.get_full_name
    .col-xs-1
      %h4= @swimmer.year_of_birth
    .col-xs-1
      %h4= @individual_result_list.first.get_category_and_gender_short
    .col-xs-2
      - badge = @individual_result_list.first.badge
      %h4= badge ? "#{I18n.t('badge.short')} #{badge.number}" : "(#{I18n.t('badge.short')} ?)"
    .col-xs-5
      %h4
        %a{'id'=>"swimmer#{@swimmer.id}", 'href'=>"#{ meeting_show_team_results_path(:id=>@meeting.id, :team_id=>team_id) }", 'data-toggle' => 'tooltip', 'title' => I18n.t('meeting.show_team_results_tooltip')}
          = team_name

  .goggles-category-gap.col-xs-12
    .col-xs-6
      %table.table.table-striped.table-bordered.table-hover.table-condensed
        %tbody
          %tr
            %td.goggles-centeralign{'colspan'=>'4'}
              %i= I18n.t('meeting.results')
            - if has_goggle_cup
              %td.goggles-centeralign{'colspan'=>'3'}
                %i= I18n.t('meeting.scores')
            - else
              %td.goggles-centeralign{'colspan'=>'2'}
                %i= I18n.t('meeting.scores')
          %tr
            %td
            %td.goggles-centeralign{'colspan'=>'2'}
              %i= I18n.t('meeting.rank')
            %td.goggles-centeralign
              %i= I18n.t('meeting.timing')
            %td.goggles-centeralign
              %i= I18n.t('meeting.standard')
            %td.goggles-centeralign
              %i= I18n.t('meeting.meeting')
            - if has_goggle_cup
              %td.goggles-centeralign
                %i= team.get_current_goggle_cup_name_at( @meeting.header_date )

          - if @individual_result_list.size > 0
            - pool_type = @individual_result_list.first.pool_type
            - sbf = SwimmerPersonalBestFinder.new( @swimmer )

          - @individual_result_list.each do |individual_result|
            - mir = MeetingIndividualResultDecorator.decorate( individual_result )
            - event_type = mir.event_type
            %tr
              %td
                %b= mir.get_event_type
              %td.goggles-rightalign
                = mir.get_rank_description
              %td
                = mir.show_any_rank_medal()
              %td.goggles-rightalign{ 'class' => mir.is_personal_best ? 'success' : '' }
                %b= mir.get_timing
              %td.goggles-rightalign
                = mir.get_formatted_standard_points(true)
              %td.goggles-rightalign
                = mir.get_formatted_individual_points(true)
              - if has_goggle_cup
                %td.goggles-rightalign
                  = mir.get_formatted_goggle_cup_points(true)

    .col-xs-5.col-xs-offset-1
      %table.table.table-striped.table-bordered.table-hover.table-condensed
        %tbody
          %tr
            %td.goggles-centeralign{'colspan'=>'4'}
              %i= I18n.t('meeting.personal_records')
          %tr
            %td
            %td.goggles-centeralign
              %i= I18n.t('meeting.personal_best')
            %td.goggles-centeralign
              %i= I18n.t('meeting.seasonal_best')
            %td.goggles-centeralign
              %i= I18n.t('meeting.meeting_best')
          - @individual_result_list.each do |individual_result|
            - mir = MeetingIndividualResultDecorator.decorate( individual_result )
            - event_type = mir.event_type
            - if !event_list.include?( event_type.code )
              - event_list << event_type.code
              %tr
                %td
                  %b= mir.get_event_type
                %td.goggles-rightalign
                  - personal_best = sbf.get_best_for_event( event_type, pool_type )
                  - if personal_best
                    - if personal_best.to_hundreds == mir.get_timing_instance.to_hundreds
                      %b= personal_best.to_s
                    - else
                      = personal_best.to_s
                  - else
                    = ''
                %td.goggles-rightalign
                  - seasonal_best = sbf.get_involved_season_best_for_event( sbf.get_contemporary_seasons_involved_into( @meeting.season ), event_type, pool_type )
                  - if seasonal_best
                    - if seasonal_best.to_hundreds == mir.get_timing_instance.to_hundreds
                      %b= seasonal_best.to_s
                    - else
                      = seasonal_best.to_s
                  - else
                    = ''
                %td.goggles-rightalign
                  - meeting_best = sbf.get_best_timing_for_meeting( @meeting, event_type, pool_type )
                  - if meeting_best
                    - if meeting_best.to_hundreds == mir.get_timing_instance.to_hundreds
                      %b= meeting_best.to_s
                    - else
                      = meeting_best.to_s
                  - else
                    = ''

  .goggles-category-gap.col-xs-12
    - @individual_result_list.each do |individual_result|
      - passages = individual_result.passages.joins(:passage_type)
      - if passages
        - passage_list = passages.select('passage_types.length_in_meters').map{ |pt| pt.length_in_meters }.uniq.sort
        - if passage_list.size > 5
          .row.col-xs-8
            = render( partial: 'swimmer_result_passages', locals: { individual_result: individual_result, passage_list: passage_list, passages: passages } )
        - else
          .row.col-xs-4
            = render( partial: 'swimmer_result_passages', locals: { individual_result: individual_result, passage_list: passage_list, passages: passages } )
        .row.col-xs-12

  .goggles-category-gap.col-xs-12
    = render( partial: 'swimmer_previous_edition', locals: { event_list: event_list } )

  .goggles-category-gap.col-xs-12
    &nbsp;
